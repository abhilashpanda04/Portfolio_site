---
import MainHead from "./MainHead.astro";
import BackgroundAnimation from "../components/BackgroundAnimation.astro";
const { title, seoTitle, seoDesc } = Astro.props;

// Add active page detection
const currentPath = Astro.url.pathname;

const baseUrl = import.meta.env.BASE_URL;

const navLinks = [
  { href: `${baseUrl}`, label: "Home" },
  { href: `${baseUrl}about`, label: "About" },
  { href: `${baseUrl}projects`, label: "Projects" }
];
---

<html lang="en" class="scroll-smooth">
  <MainHead title={title} seoTitle={seoTitle} seoDesc={seoDesc} />
  <body class="bg-[#000212] text-white min-h-screen">
    <BackgroundAnimation />
    <nav class="fixed top-0 w-full bg-[#000212]/70 backdrop-blur-xl z-50 border-b border-white/5">
      <div class="max-w-5xl mx-auto px-4 sm:px-6">
        <div class="flex justify-between h-16">
          <!-- Logo and Navigation -->
          <div class="flex items-center">
            <a href="/" 
               class="group flex items-center space-x-2 text-xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-[#4461f2] via-[#7c8bff] to-[#bc52ee] hover:opacity-80 transition-all duration-300">
              <span class="tracking-tight">AKP</span>
              <div class="hidden sm:block h-2 w-2 rounded-full bg-[#4461f2] group-hover:bg-[#bc52ee] transition-colors"></div>
            </a>
            
            <!-- Desktop Navigation -->
            <div class="hidden md:flex items-center ml-8">
              {navLinks.map(({ href, label }) => (
                <a href={href} 
                  class:list={[
                    "relative px-4 py-2 text-sm font-medium rounded-lg transition-all duration-300",
                    "hover:text-white hover:bg-white/5",
                    currentPath === href ? 
                      "text-white after:absolute after:bottom-0 after:left-0 after:w-full after:h-0.5 after:bg-gradient-to-r after:from-[#4461f2] after:to-[#bc52ee]" : 
                      "text-white/70"
                  ]}>
                  {label}
                </a>
              ))}
            </div>
          <!-- Social Links -->
          <div class="flex items-center space-x-1">
            <a href="https://github.com/abhilashpanda04" 
               target="_blank" 
               rel="noopener noreferrer" 
               class="group p-2 rounded-lg text-white/70 hover:text-white hover:bg-white/5 transition-all">
              <span class="sr-only">GitHub</span>
              <svg class="h-5 w-5 transition-transform group-hover:scale-110" fill="currentColor" viewBox="0 0 24 24">
                <path fill-rule="evenodd" d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z" clip-rule="evenodd"/>
              </svg>
            </a>
            <a href="https://www.linkedin.com/in/abhilash-kumar-panda" 
               target="_blank" 
               rel="noopener noreferrer" 
               class="group p-2 rounded-lg text-white/70 hover:text-white hover:bg-white/5 transition-all">
              <span class="sr-only">LinkedIn</span>
              <svg class="h-5 w-5 transition-transform group-hover:scale-110" fill="currentColor" viewBox="0 0 24 24">
                <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
              </svg>
            </a>

            <!-- Mobile Menu Button (you can expand this into a full mobile menu) -->
            <button type="button" 
                    class="md:hidden p-2 rounded-lg text-white/70 hover:text-white hover:bg-white/5 transition-all"
                    aria-label="Toggle menu">
              <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
              </svg>
            </button>
          </div>
        </div>
      </div>

      <!-- Mobile Navigation Menu (hidden by default) -->
      <div class="md:hidden" id="mobile-menu" hidden>
        <div class="px-2 pt-2 pb-3 space-y-1 bg-[#000212]/90 backdrop-blur-xl border-t border-white/5">
          {[
            { href: "/", label: "Home" },
            { href: "/about", label: "About" },
            { href: "/projects", label: "Projects" }
          ].map(({ href, label }) => (
            <a href={href}
               class:list={[
                 "block px-3 py-2 rounded-md text-base font-medium transition-all",
                 currentPath === href ?
                   "text-white bg-white/5" :
                   "text-white/70 hover:text-white hover:bg-white/5"
               ]}>
              {label}
            </a>
          ))}
        </div>
      </div>
    </nav>
    <main class="pt-16 relative z-10">
      <slot />
    </main>
    <footer class="mt-16 border-t border-white/10">
      <div class="max-w-5xl mx-auto py-12 px-4 sm:px-6 text-white/50">
        <p class="text-center">Â© {new Date().getFullYear()} Abhilash Kumar Panda. All rights reserved.</p>
      </div>
    </footer>
    <script>
      // Add mouse tracking for fire gradient animation
      document.addEventListener('mousemove', (e) => {
        const x = e.clientX;
        const y = e.clientY;
        document.body.style.background = `radial-gradient(circle at ${x}px ${y}px, #ff7e5f, #feb47b)`;
      });

      // Mobile menu toggle
      const menuButton = document.querySelector('button[aria-label="Toggle menu"]');
      const mobileMenu = document.getElementById('mobile-menu');

      if (menuButton && mobileMenu) {
        menuButton.addEventListener('click', () => {
          const isHidden = mobileMenu.hidden;
          mobileMenu.hidden = !isHidden;
          menuButton.setAttribute('aria-expanded', (!isHidden).toString());
        });
      }

      // Hide mobile menu on wider screens
      window.addEventListener('resize', () => {
        if (window.innerWidth >= 768 && mobileMenu) {
          mobileMenu.hidden = true;
        }
      });

      // Add scroll behavior
      let lastScroll = 0;
      const nav = document.querySelector('nav');

      window.addEventListener('scroll', () => {
        if (!nav) return;
        
        const currentScroll = window.pageYOffset;
        
        if (currentScroll <= 0) {
          nav.classList.remove('nav-hidden');
          return;
        }
        
        if (currentScroll > lastScroll && !nav.classList.contains('nav-hidden')) {
          // Scrolling down
          nav.classList.add('nav-hidden');
        } else if (currentScroll < lastScroll && nav.classList.contains('nav-hidden')) {
          // Scrolling up
          nav.classList.remove('nav-hidden');
        }
        
        lastScroll = currentScroll;
      });
    </script>
  </body>
</html>

<style is:global>
  ::selection {
    background: #4461f2;
    color: white;
  }
  
  ::-webkit-scrollbar {
    width: 8px;
  }
  
  ::-webkit-scrollbar-track {
    background: #000212;
  }
  
  ::-webkit-scrollbar-thumb {
    background: linear-gradient(to bottom, #4461f2, #bc52ee);
    border-radius: 4px;
  }
  
  ::-webkit-scrollbar-thumb:hover {
    background: linear-gradient(to bottom, #7c8bff, #d174ff);
  }

  /* Add smooth scrolling */
  html {
    scroll-behavior: smooth;
  }

  /* Add a subtle text shadow to headings */
  h1, h2, h3, h4, h5, h6 {
    text-shadow: 0 0 20px rgba(68, 97, 242, 0.1);
  }

  /* Improve card hover effects */
  [class*="backdrop-blur"] {
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1),
                border-color 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  [class*="backdrop-blur"]:hover {
    transform: translateY(-2px);
  }

  /* Add smooth transition for nav hiding */
  nav {
    transition: transform 0.3s ease;
  }

  .nav-hidden {
    transform: translateY(-100%);
  }

  /* Add hover effect for nav items */
  nav a::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    width: 0;
    height: 2px;
    background: linear-gradient(to right, #4461f2, #bc52ee);
    transition: all 0.3s ease;
    transform: translateX(-50%);
  }

  nav a:hover::after {
    width: 100%;
  }
</style>